/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gerikson
 */
package ScrippsGenomeAdviserUI;

import java.awt.Color;
import java.awt.SystemColor;

/**
 *
 * @author gerikson
 */
public class Help extends javax.swing.JFrame {

    /**
     * Creates new form HelpMenu
     */
    public Help() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1.setName("Help Menu");
        
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEditable(false);
        jTextArea1.setBackground(Color.white);
        jTextArea1.setText("The SG-ADVISER UI is a visualization tool for desktop computers that allows investigators of varying computational skill to easily and quickly view, manipulate, sort, filter and extract fragments of the SG-ADVISER output file.\n\n1. Visualize big files (1GB+);\n2. View the file contents by pressing on next/previous pages at the bottom of the   page;\n3. Sort the entire file by a selected column;\n4. Simple filter - filter by any criteria any column of the file;\n5. Custom Filter:\n    a. Coding Variants – All variants impacting the protein coding sequence of a gene: i.e. all possible coding impacts except synonymous variants;\n    b. Coding & Splice Variants - Coding Variants plus variants annotated to damage splice donor and acceptor sites;\n    c. Known Disease – “1” values of the ACMG-Score columns;\n    d. Clinical Known and Predicted Disease Causing Variants - All entries in the column 'ACMG Score Clinical/Disease Entry/Explanation' receiving a modified ACMG categorization of 1, 2, or 2*. See http://genomics.scripps.edu/ADVISER/ACMG.jsp for ACMG scoring criteria;\n    e. Research Known and Predicted Disease Causing Variants - All entries in the column 'ACMG Score Research/Disease Entry/Explanation' receiving a modified ACMG categorization of 1, 2 and 2*. See http://genomics.scripps.edu/ADVISER/ACMG.jsp for ACMG scoring criteria;\n    f. Cancer Genes – All genes annotated as cancer genes by either the Sanger Cancer Gene Census, Memorial Sloan Kettering Cancer Center or Atlas Oncology;\n    g. Pharmacogenetic – All variants curated by PharmGKB;\n    h. Truncating Variants – All Frameshift and Nonsense variants;\n    i. Coding and Splice Variants with Frequency - Coding and Splice Variants plus a user defined frequency threshold in as observed in the 1000 Genomes, 69 publically available Complete Genomics genomes and the Scripps Wellderly population;\n    j. Novel Variants - All variants within a user defined region;\n    k. Position – All variants within a user defined region;\n6. Advance filter - filter any 3 columns with any entered filter data (AND option);\n7. Save to file – saves the current view (sort/filter) to a selected file;\n8. Comment column – insert any comment in the last column of the view, the comment will be saved if the file is saved;\n9. When you apply a filter to data it only shows the filtered data, you can further filter this data, but if you want to do a brand new filter you need to undo (Undo -> Original Data or press |<) to gain access to the original data. Also the \"|< << >> >|\" on the side of menu bar will take you through the filtered arrays;\n10. Load and compare VCF - gives you the ability to load the VCF file, the VCF file is then compared to the pipeline input file, if it comes from the same data set the Imported Genotype column is filled up with data from the VCF file;\n11. Tooltips – if you let the cursor hover above any menu item it will explain its functionality in a few words;\n\nRunning SG-ADVISER UI:\n\nOSX users: Double-click SG-ADVISER_UI_'version'.command file to run SG-Adviser UI;\nWindows users: Double-click SG-ADVISER_UI_'version'.bat file to run SG-Adviser UI;\nTerminal/console/command window users: 'cd' to the folder where the SG-ADVISER UI is located\nType java -Xmx2g -jar SG-Adviser_UI_'version'.jar\nYou may need more memory, especially if nothing seems to be happening, or you see an error in the terminal/console/command window about \"Out of Heap Space\". This can be changed by editing the *.command or *.bat file: change \"-Xmx2g\" to be something larger, like \"-Xmx8g\" (no quotes). Note that this needs to be lower than your total system memory. \n\n\n\nExample usage:\n1. Double click on SG-ADVISER_UI_*version*.bat or SG-ADVISER_UI_*version*.command;\n2. Go to File -> Open and select the file you want to analyze;\n3. Press on Next Page to view the file contents (to save time at loading only 500 lines are shown per view, \nyou can look at the first few pages while the entire file is being loaded in memory); \n4. Be patient till the progress bar shows that the entire file is loaded in memory before you proceed with any sorting of filtering;\n5. Sort file by a column of interest. Ex: Gene or ACMG Score;\n6. Use the custom filters by looking at Known and Predicted Disease – Causing Variants;\n7. Find out the variants in Cancer Genes from the Known and Predicted Disease Causing Variants by selecting the Cancer Genes filter;\n8. Remember that each consecutive filter is filtering the current filter data; in order to filter the entire file you have to click on Undo -> Original data or click |<;\n9. If the filter result is bigger than 1000 entries you can see the next pages by clicking on Next Page or go back by clicking on Previous Page at the bottom of the view;\n10. If you want to find only variants that are entries in PharmGKB database and drug whose metabolism is perturbed you can use the Pharmacogenetic filter;\n11. To select only entries on a specific chromosome/position choose Chromosome Position filter;\n12. To filter the variants from a single gene, in the filter bar select column “Gene”in enter the gene name. Ex: TP 53;\n13. Add comments in the comments column;\n14. Save results to file;\n15. Go back to Original Data;\n16. Use custom filter and filter by any 3 criteria;\n17. Go on genomics.scripps.edu/Adviser/Result_desc.jsp to read about the description of each column;\n\t\n\nQuestions, comments, suggestions will be greatly appreciated. Please contact us on the forum at genomics.scripps.edu/forum or for questions directly related to the UI contact Galina Erikson at gerikson@scripps.edu\n\nThank you for using SG-ADVISER UI!\n");
        jTextArea1.setName("Help Menu"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);
        

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HelpMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HelpMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HelpMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HelpMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HelpMenu().setVisible(true);
            }
        });
    } 
    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}

